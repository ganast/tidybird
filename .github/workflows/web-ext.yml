name: "web-ext"
on:
  push:
  pull_request:

  workflow_dispatch:

jobs:
  web-ext:
    name: "web-ext"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v1

      - name: "Install node"
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: "Install requirements"
        run: yarnpkg

      - name: "Run eslint"
        run: ./node_modules/.bin/eslint .

      - name: "web-ext lint"
        uses: freaktechnik/web-ext-lint@v1
        with:
          verbose: true

      - name: "web-ext build"
        id: web-ext-build
        if: startsWith(github.ref, 'refs/tags/v')
        uses: kewisch/action-web-ext@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          cmd: build
          channel: listed
          verbose: true

      - name: "Get xpi filename"
        id: get_xpi_filename
        if: ${{ steps.web-ext-build.outputs.target }}
        uses: frabert/replace-string-action@v1.2
        with:
          pattern: ".zip"
          string: ${{ steps.web-ext-build.outputs.target }}
          replace-with: ".xpi"

      - name: "Copy zip to xpi"
        if: ${{ steps.web-ext-build.outputs.target }}
        run: |
          cp ${{ steps.web-ext-build.outputs.target }} ${{ steps.get_xpi_filename.outputs.replaced }}
        shell: bash

      - name: "Get version"
        id: get_version
        if: ${{ steps.web-ext-build.outputs.target }}
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
        shell: bash

      - name: "Get tag annotation"
        id: get_tag
        if: ${{ steps.web-ext-build.outputs.target }}
        run: |
          git fetch --tags --force
          echo ::set-output name=subject::$(git for-each-ref $GITHUB_REF --format='%(contents:subject)')
        shell: bash

      - name: "Create release"
        id: create_release
        if: ${{ steps.web-ext-build.outputs.target }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Tidybird ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.get_tag.outputs.subject }}
          draft: true
          prerelease: true

      - name: "Get release asset basenames"
        id: get_basename
        if: ${{ steps.create_release.outputs.upload_url }}
        run: |
          echo ::set-output name=xpi::$(basename ${{ steps.get_xpi_filename.outputs.replaced }})
          echo ::set-output name=zip::$(basename ${{ steps.web-ext-build.outputs.target }})
        shell: bash

      - name: "Upload release assets .xpi"
        if: ${{ steps.create_release.outputs.upload_url }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_xpi_filename.outputs.replaced }}
          asset_name: ${{ steps.get_basename.outputs.xpi }}
          asset_content_type: "application/zip"

      - name: "Upload release assets .zip"
        if: ${{ steps.create_release.outputs.upload_url }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.web-ext-build.outputs.target }}
          asset_name: ${{ steps.get_basename.outputs.zip }}
          asset_content_type: "application/zip"
